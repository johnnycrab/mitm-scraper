// Generated by CoffeeScript 1.6.3
var PageTransformer, app, cheerio, express, fs, io, server, subterfuge_image_loc;

subterfuge_image_loc = 'http://192.168.178.151:3000/static/imagescraper/';

express = require('express');

fs = require('fs');

cheerio = require('cheerio');

app = express();

server = require('http').createServer(app);

io = require('socket.io').listen(server);

server.listen(3000);

app.configure(function() {
  return app.use(express["static"](__dirname + '/public'));
});

io.sockets.on('connection', function(socket) {
  socket.on('ping', function() {
    return socket.emit('ready');
  });
  return socket.on('scrape', function(data) {
    var pageTransformer;
    data = JSON.parse(data);
    pageTransformer = new PageTransformer(data.page, data.host);
    return pageTransformer.run();
  });
});

PageTransformer = (function() {
  function PageTransformer(data, host) {
    this.host = host;
    this.html = '<!DOCTYPE html><html>' + data + '</html>';
    this.$ = cheerio.load(this.html);
    this.timestamp = new Date().getTime();
  }

  PageTransformer.prototype.run = function() {
    this.removeScripts();
    this.changeImageSources();
    return this.save();
  };

  PageTransformer.prototype.removeScripts = function() {
    return this.$('script').remove();
  };

  PageTransformer.prototype.changeImageSources = function() {
    var $, that;
    $ = this.$;
    that = this;
    return $('img').each(function() {
      var newHost, re, src;
      src = $(this).attr('src');
      newHost = '';
      if (src.indexOf('http://') !== 0) {
        newHost = that.host + (src.indexOf('/') === 0 ? '' : '/') + src;
      } else {
        newHost = src.replace('http://', '');
      }
      re = new RegExp('/', 'g');
      newHost = subterfuge_image_loc + newHost.replace(re, '_');
      console.log(newHost);
      return $(this).attr('src', newHost);
    });
  };

  PageTransformer.prototype.save = function() {
    return fs.writeFile('pages/' + this.timestamp + '.html', this.$.html());
  };

  return PageTransformer;

})();
